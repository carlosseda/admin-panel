@mixin borderColor($i) {

    $bt: 0.1rem;
    $bs: $bt * 2;
    $colors: $secondary-color-dark, $secondary-color, $secondary-color-dark;

    border: $bt solid nth($colors, $i);
    background: lighten(nth($colors, $i), 10%);
    box-shadow: 0 0 $bs $bs/2 nth($colors, $i) inset,
                0 0 $bs $bs/2 nth($colors, $i);
}

@mixin gradientColor($direction, $color, $color-highlight){
    background: $color; /* Old browsers */
    background: -moz-linear-gradient(to $direction, $color-highlight 0%, $color 100%); 
    background: -webkit-linear-gradient(to $direction, $color-highlight 0%, $color 100%); 
    background: linear-gradient(to $direction, $color-highlight 0%, $color 100%);
}

@mixin button($font-size, $width) {
    background-color: $secondary-color;
    border: 0;
    border-radius: 0.2em;
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 2px 9px 0 rgba(0, 0, 0, 0.19);
    color: #fff;
    font-size: $font-size;
    height: 2em;
    line-height: 1em;
    width: $width;

    &:active, &:focus {
        background-color: $secondary-color-dark;        
        border-left: 0;
        border-bottom: 0;
        outline: none !important;  
    }
}

@mixin respond-to($breakpoint) {
    @if $breakpoint == "xs" {
        @media (max-width:479px) {
        @content;
        }
    }

    @else if $breakpoint == "sm" {
        @media (max-width:767px) {
        @content;
        }
    }

    @else if $breakpoint == "md" {
        @media (min-width:992px) and (max-width:1200px) {
        @content;
        }
    }

    @else if $breakpoint == "lg" {
        @media (min-width: 1920px) {
        @content;
        }
    }
}

@mixin fadeIn($delay,$duration) {

    opacity: 0;
    transition-delay: $delay;
    transition: all $duration linear;

    &.fadeIn{
        max-height: 100%;
        opacity: 1;
    } 
}

@mixin fadeOut($delay,$duration) {
    opacity: 0;
    animation-delay: $delay;
    animation-duration: $duration;
    animation-fill-mode: forwards;
    animation-name: fadeOut;

    @keyframes fadeOut {
        0% {opacity: 1;}
        100% {opacity: 0;}
    } 
}

@mixin fade($delay, $duration) {
    display: initial;
    visibility: visible;
    opacity: 0;
    transition: all $duration;

    &.fade{
        opacity: 1;
    }
}

@mixin translateXOutScreen($delay,$duration){
    
    animation-name: translateXOutScreen;
    animation-duration:  $duration;
    animation-delay: $delay;
    animation-fill-mode: forwards;

    @keyframes translateXOutScreen {
        0%  {transform: translateX(0);} 
        100% {transform: translateX(-150%);}
    }
}

@mixin translateXInScreen($delay,$duration){
    
    animation-name: translateXOutScreen;
    animation-duration:  $duration;
    animation-delay: $delay;
    animation-fill-mode: forwards;

    @keyframes translateXOutScreen {
        0%  {transform: translateX(150%);} 
        100% {transform: translateX(0%);}
    }
}   

@mixin translateYInScreen($delay,$duration){
    
    animation-name: translateYInScreen;
    animation-duration:  $duration;
    animation-delay: $delay;
    animation-fill-mode: forwards;

    @keyframes translateYInScreen {
        0%  {transform: translateY(-150%);} 
        100% {transform: translateY(0%);}
    }
}   

@mixin translateYOutScreen($delay,$duration){
    
    animation-name: translateYOutScreen;
    animation-duration:  $duration;
    animation-delay: $delay;
    animation-fill-mode: forwards;

    @keyframes translateYOutScreen {
        0%  {transform: translateY(0%);} 
        100% {transform: translateY(-150%);}
    }
} 

@mixin bounceX($duration, $iteration){

    animation-name: bounce;
    animation-duration: $duration;
    animation-iteration-count: $iteration;

    @keyframes bounce {
        0%  {transform: translateX(0);} 
        20% {transform: translateX(0);}         
        40% {transform: translateX(-30px);}
        50% {transform: translateX(0);}
        60% {transform: translateX(-15px);} 
        80% {transform: translateX(0);} 
        100% {transform: translateX(0);}
    }
}

@mixin bounceY($duration, $iteration){

    animation-name: bounce;
    animation-duration: $duration;
    animation-iteration-count: $iteration;

    @keyframes bounce {
        0%  {transform: translateY(0);} 
        50% {transform: translateY(-45px);}
        100% {transform: translateY(0);}
    }
}

@mixin rotate($class, $width, $width-sm) {
    
    .#{$class}.is-switched .is-visible {
        -webkit-transform: rotateY(180deg);
        -moz-transform: rotateY(180deg);
        -ms-transform: rotateY(180deg);
        -o-transform: rotateY(180deg);
        transform: rotateY(180deg);
        -webkit-animation: rotate 0.5s;
        -moz-animation: rotate 0.5s;
        animation: rotate 0.5s;
    }
    
    .#{$class}.is-switched .is-hidden {
        -webkit-transform: rotateY(0);
        -moz-transform: rotateY(0);
        -ms-transform: rotateY(0);
        -o-transform: rotateY(0);
        transform: rotateY(0);
        -webkit-animation: rotate-inverse 0.5s;
        -moz-animation: rotate-inverse 0.5s;
        animation: rotate-inverse 0.5s;
        opacity: 0;
    }
    
    .#{$class}.is-switched .is-selected {
        opacity: 1;
    }
    
    .#{$class} > div {
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        outline: 1px solid transparent;
    }
    
    .#{$class} .is-visible {
        position: relative;
        z-index: 5;
    }
    
    .#{$class} .is-hidden {
        position: absolute;
        top: 0;
        width: $width;
        z-index: 1;
        -webkit-transform: rotateY(180deg);
        -moz-transform: rotateY(180deg);
        -ms-transform: rotateY(180deg);
        -o-transform: rotateY(180deg);
        transform: rotateY(180deg);

        @include respond-to('sm'){
            width: $width-sm;
        }
    }

    @-webkit-keyframes rotate {
        0% {
          -webkit-transform: perspective(2000px) rotateY(0);
        }
        70% {
          -webkit-transform: perspective(2000px) rotateY(200deg);
        }
        100% {
          -webkit-transform: perspective(2000px) rotateY(180deg);
        }
    }
      
    @-moz-keyframes rotate {
        0% {
          -moz-transform: perspective(2000px) rotateY(0);
        }
        70% {
          -moz-transform: perspective(2000px) rotateY(200deg);
        }
        100% {
          -moz-transform: perspective(2000px) rotateY(180deg);
        }
    }
      
    @keyframes rotate {
        0% {
          -webkit-transform: perspective(2000px) rotateY(0);
          -moz-transform: perspective(2000px) rotateY(0);
          -ms-transform: perspective(2000px) rotateY(0);
          -o-transform: perspective(2000px) rotateY(0);
          transform: perspective(2000px) rotateY(0);
        }
        70% {
          -webkit-transform: perspective(2000px) rotateY(200deg);
          -moz-transform: perspective(2000px) rotateY(200deg);
          -ms-transform: perspective(2000px) rotateY(200deg);
          -o-transform: perspective(2000px) rotateY(200deg);
          transform: perspective(2000px) rotateY(200deg);
        }
        100% {
          -webkit-transform: perspective(2000px) rotateY(180deg);
          -moz-transform: perspective(2000px) rotateY(180deg);
          -ms-transform: perspective(2000px) rotateY(180deg);
          -o-transform: perspective(2000px) rotateY(180deg);
          transform: perspective(2000px) rotateY(180deg);
        }
    }
      
    @-webkit-keyframes rotate-inverse {
        0% {
          -webkit-transform: perspective(2000px) rotateY(-180deg);
        }
        70% {
          -webkit-transform: perspective(2000px) rotateY(20deg);
        }
        100% {
          -webkit-transform: perspective(2000px) rotateY(0);
        }
    }
      
    @-moz-keyframes rotate-inverse {
        0% {
          -moz-transform: perspective(2000px) rotateY(-180deg);
        }
        70% {
          -moz-transform: perspective(2000px) rotateY(20deg);
        }
        100% {
          -moz-transform: perspective(2000px) rotateY(0);
        }
    }
      
    @keyframes rotate-inverse {
        0% {
          -webkit-transform: perspective(2000px) rotateY(-180deg);
          -moz-transform: perspective(2000px) rotateY(-180deg);
          -ms-transform: perspective(2000px) rotateY(-180deg);
          -o-transform: perspective(2000px) rotateY(-180deg);
          transform: perspective(2000px) rotateY(-180deg);
        }
        70% {
          -webkit-transform: perspective(2000px) rotateY(20deg);
          -moz-transform: perspective(2000px) rotateY(20deg);
          -ms-transform: perspective(2000px) rotateY(20deg);
          -o-transform: perspective(2000px) rotateY(20deg);
          transform: perspective(2000px) rotateY(20deg);
        }
        100% {
          -webkit-transform: perspective(2000px) rotateY(0);
          -moz-transform: perspective(2000px) rotateY(0);
          -ms-transform: perspective(2000px) rotateY(0);
          -o-transform: perspective(2000px) rotateY(0);
          transform: perspective(2000px) rotateY(0);
        }
    }
}

@mixin plusMinus($width, $lineWidth, $color) {

    box-sizing: border-box;
    transition: transform 0.3s;
    width: $width;
    height: $width;
    transform: rotate(180deg);
    position: relative;
  
    &.active {
        transform: rotate(0deg);
    }

    &::before {
        content: '';
        display: block;
        width: $width;
        height:0px;
        border-bottom: solid $lineWidth $color;
        position: absolute;
        bottom:$width /2 - $lineWidth/2;
        transform: rotate(90deg);
        transition: width 0.3s;
    }

    &.active::before {
        content: '';
        display: block;
        width: 0px;
        height:0px;
        border-bottom: solid $lineWidth $color;
        position: absolute;
        bottom:$width /2 - $lineWidth/2;
        transform: rotate(90deg);
    }

    &::after {
        content: '';
        display: block;
        width: $width;
        height:0px;
        border-bottom: solid $lineWidth $color;
        position: absolute;
        bottom:$width /2 - $lineWidth/2;
    }
}

@mixin gradientButton($primary, $secondary, $fontsize){

    background-image: linear-gradient(to right, $primary 0%, $secondary 50%, $primary 100%);
    background-size: 200% auto;
    border-radius: 1.2em;
    border: none;
    color: white;
    font-size: $fontsize;
    font-weight: 400;
    letter-spacing: 0;
    line-height: 0px;
    min-width: 20%;
    padding: 1.2em 2em;
    transition: 0.5s;
    text-decoration: none;
    width: 100%;

    &:hover{
        background-size: 100% auto;
    }
    
    &:focus {
        outline: 0;
    }
}
